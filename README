1. At the prompt type nvidia-smi. On my machine I see….
 
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 375.20                 Driver Version: 375.20                    |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  Tesla P100-PCIE...  On   | 0000:02:00.0     Off |                    0 |
| N/A   32C    P0    26W / 250W |      0MiB / 16308MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
|   1  Tesla P100-PCIE...  On   | 0000:03:00.0     Off |                    0 |
| N/A   34C    P0    25W / 250W |      0MiB / 16308MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
                                                                              
+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID  Type  Process name                               Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+

 If you have a multi-gpu system, you need to modify 2 files to use one specific card:
 - edit the lib/AstroAccelerate/params.h file so that the CARD variable is set to the right card number id:
#define CARD ... 
 - edit the Makefile and set the GENCODE_FLAG to the correct architecture:
 GENCODE_FLAGS := $(GENCODE_SM61) if I have a Pascal architecture ...

2. Upgrade your CUDA version to CUDA 8.0, you can get this here: https://developer.nvidia.com/cuda-downloads

3. Upgrade to the latest version of AstroAccelerate (this now has acceleration searching, zero dm and some limited RFI mitigation), 
you can pull this from git or download a tar: https://github.com/AstroAccelerateOrg/astro-accelerate

4. Then ./bootstrap.sh and cd to lib and make clean && make –j 8

5. If this compiles then you need to create an input file. This should look like:
 
range    0    150  0.1  1 1
range    150  300  0.2  1 1
range    300  500  0.25 1 1
range    500  900  0.4  2 2
range    900  1200 0.6  4 4
range    1200 1500 0.8  4 4
range    1500 2000 1.0  4 4
range    2000 3000 2.0  8 8
sigma_cutoff     6
analysis
-acceleration
-periodicity
-output_dmt
-zero_dm
-zero_dm_with_outliers
-rfi
fdas_custom_fft
-fdas_inbin
fdas_norm
debug
file /home/wa78/filterbank/ska-mid-b2.fil
 
You can turn any of the features off by adding a character at the beginning of the line (here "-" is used).
Let me explain them …

range tells the code to dedisperse and has input
 
range dm_low dm_high dm_step downsampling_in_input_time downsampling_in_output_time
 
so…
 
range 500  900  0.4  2 2
 
tells the code to dedisperse from a dm of 500 to a dm of 900 in steps of 0.4 (making (900-500)/0.4 dm trials) with input data 
downsampled (in time by 2, so 64uS would be binned into 128uS samples).
 
sigma_cutoff is the SNR cutoff for your single pulse search.
 
analysis this tells the code to analyse the dedispersed data outputting data into the output directory, these are binary files and so 
can be read in gnuplot (for example, you could use python etc) using:
splot "./57663_22588_B0531+21_000007.fil/global_analysed_frb.dat" binary format="%float%float%float%float" u 1:2:3 palette
 
acceleration this does a Fourier domain acceleration search on the data.
 
periodicity this looks for periodic objects
 
output_dmt this outputs the entire dedispersed data to a file (in ASCII)
 
zero_dm you can guess
 
zero_dm_with_outliers this is part of the rfi mitigation routine
 
rfi again this trys to eliminate RFI (we’ve had good results from Lovell data so far, if you have any data with RFI that you could
share that would be very helpful).

fdas_custom_fft this runs fourier domain acceleration search with a custom FFT

fdas_inbin this performs interbinning on the complex output

fdas_norm this performs PRESTO block median normalization 
 
debug this gives detailed output
 
file <your input file>
 
One thing to note is that this version works with 8 bit data. If you have input data that’s different to 8 bits let me know and 
I’ll add this to the code (we have other versions). 

6. Next if you plan to use this on the same machine to search many filterbank files from the same observation you should optimise 
the code:

Once you have your input file cd to the scripts directory. In it modify the profiling.sh script, change:
 
./astro-accelerate.sh ../input_files/ska_tune.txt
 
to
 
./astro-accelerate.sh ../input_files/<your input file>
 

7. Run ./profiling.sh

 
This will create an optimised code for your search and GPU type.
 

8. You can then use ./astro-accelerate.sh ../input_files/<your input file>
